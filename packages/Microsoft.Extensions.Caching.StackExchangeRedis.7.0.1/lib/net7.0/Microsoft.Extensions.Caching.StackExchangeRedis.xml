<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Caching.StackExchangeRedis</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache">
            <summary>
            Distributed cache implementation using Redis.
            <para>Uses <c>StackExchange.Redis</c> as the Redis client.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache"/>.
            </summary>
            <param name="optionsAccessor">The configuration options.</param>
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions},Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache"/>.
            </summary>
            <param name="optionsAccessor">The configuration options.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Get(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Refresh(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.RefreshAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions">
            <summary>
            Configuration options for <see cref="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.Configuration">
            <summary>
            The configuration used to connect to Redis.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.ConfigurationOptions">
            <summary>
            The configuration used to connect to Redis.
            This is preferred over Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.ConnectionMultiplexerFactory">
            <summary>
            Gets or sets a delegate to create the ConnectionMultiplexer instance.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.InstanceName">
            <summary>
            The Redis instance name.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions.ProfilingSession">
            <summary>
            The Redis profiling session
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.StackExchangeRedisCacheServiceCollectionExtensions">
            <summary>
            Extension methods for setting up Redis distributed cache related services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.StackExchangeRedisCacheServiceCollectionExtensions.AddStackExchangeRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions})">
            <summary>
            Adds Redis distributed caching services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="setupAction">An <see cref="T:System.Action`1"/> to configure the provided
            <see cref="T:Microsoft.Extensions.Caching.StackExchangeRedis.RedisCacheOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
    </members>
</doc>
